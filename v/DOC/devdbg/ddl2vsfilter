=== Problem:
1.
filter (list of trigger detectors whose inputs need to be ignored) in ACT is not taken into account
when INT_MASK_FOR_INPUTS_1_24/+4 (DDL2_IR line in ctp.cfg) is set
2.
also consider monitoring of valid inputs (i.e. DDL2_IR after filter applied) and issue 
alarm if input rate is high (ringing)

ctp/ctplib/readTablesClient.c
-here DDL2_IR line is processed, using global array validCTPINPUTs
 only on vme comp. HAS TO BE DONE ONLY AFTER validCTPINPUTs filled in -
 i.e. files should be processed in correct order, ctp.cfg 
 should be read after ctpinputs.cfg -seems ok:
 ctp_Initproxy() ctp_proxy.c:
   readTables() readTables.c               <- read ctpinputs.cfg
   initCTP() initCTP.c
     loadcheckctpcfg() readTablesClient.c  <- read ctp.cfg and program DDL2_IR
       updateDDL2IR(line) updateDDL2IR.c    static char archline[250]="";
         vmew32(INT_MASK_FOR_INPUTS_1_24...             ********

 ctp_InitPartition() ctp_proxy.c
  if(npart==0) 
    rc= update_dimnum(0);  -> readTables.c
      openFile("filter"
      static char lastfilterline[200]=""; // last filter line (checked at SOR)
                  **************
      validCTPINPUTs[] update...
    updateDDL2IR("");
     updateDDL2IR takes here old (from time of ctp_proxy start) DDL2_IR line? No -this is ok
Bug found 3.11. in update_dimnum(): first all FLG_FILTEREDOUT flags need to be reset to 0
before setting them.

=== Todo:
-update validCTPINPUTs[].dimnum item with a flag 'filtered out'
-i.e.:
 -1) reset all 'filtered out' flags to 0 at ctpproxy restart
     done anyhow in readTables():  validCTPINPUTs[ixtab].dimnum= a3[3];
 -2) set these flags according to a $dbctp/filter -can be done only after 
     ctpinputs.cfg read in shared memory in readTables()/readTables.c
     Note: seems filter file is read in only on server (not on alidcsvme001) now!
     done

-3) check 'filtered out' flag when 'connected input' is checked (in loadcheckctpcfg() readTablesClient.c)
    done

The 'filtered out' flag in validCTPINPUTs shm should be always consistent -updated 
with each change (ctp.cfg or ctpinputs.cfg -> ctpproxy restart) on alidcsvme001

-Warning: 'filtered out' flag is NOT updated on 835 machine (pydim server
 also has a connection to shared memory!)

test on adls 23.8.2017:
VALID.LTUS: HMPID PHOS TOF TRD
filter: TOF PHOS
ctp.cfg DDL2_IR 0OM2 0PH0 0HCO
ctpinputs.cfg
#nam = det      L Si  In dn Sw E  D DeltaMin DeltaMax ppn nameweb eq dimdns dimservice #any
0HCO = TRD      0  83  0  0 11 0 17 1000 1000 NA TRD-CBB_LM_1 0 NA NA #3B1 11.1.2015: LM
0OM2 = TOF      0  60  9  1 31 0  3 1000 1000 NA tofl0_1 0 NA NA #1A13
0PH0 = PHOS     0   4 17  0 48 1  0 1000 1000 NA 18651 0 NA NA #2B13
seems ok

=== light items in ACT: is filter light item ?
From ctpcfg_ACT2daq:
...i.e. we do not need
to reconfigure ctpproxy after filter change -it just becomes valid with
the next run...

Conclusion (*2) choosen): 
 1) after filter change, reconfigure ctp (this way abandoned) or
*2) arrange  an update of FLG_FILTEREDOUT flags for all inputs + DDL2_IR reprograming 
   at the SOR (in ctpproxy) when there is no OTHER run active:
messages:
SOR1 (i.e. no other active runs):
INFO no change in filtered inputs, ok.   ONLY LOG
 -see: update_dimnum(0) call in ctp_proxy.c
INFO The list of filtered inputs changed, DDL2 readout was updated accordingly

SOR (i.e. there is an active run already)
ERROR The list of filtered inputs changed, DDL2 not updated (will be done when there is no active run)

=== 25.8.2017 test on adls
filter:ZDC TOF
patritions: hmpid (HMPID) PHYSICS_1 (PHOS TRD)
ctp_proxy start:
INFO openFile:/local/trigger/v/vme/CFG/ctp/DB/filter r
25.08.2017 11:13:29: ***  Warning:Filtering out a not connected input 0ZED
...
INFO 11:0ZED filtered out 

...
Warning input 0OM2 filtered out
ERROR input 0HCO not connected in ctpinputs.cfg
DDL2_IR 48..25 24..1: 0x800000 0x0  0OM2 0PH0 0HCO
...
- seems ok

smicmd init hmpid 64 1
INFO openFile:/local/trigger/v/vme/CFG/ctp/DB/filter r
25.08.2017 14:44:10: no change in filtered inputs, ok.

filter change to ZDC only
smicmd init PHYSICS_1 128 1
INFO openFile:/local/trigger/v/vme/CFG/ctp/DB/filter r
25.08.2017 14:51:24: ***  Warning:The list of filtered inputs changed, DDL2 not updated (will be done when there is no active run)

smicmd stop hmpid
smicmd stop PHYSICS_1
smicmd init PHYSICS_1 128 3

=== Problem: nfs cache: when filter changed on server, client does not see 
   changed file -seems cache updated after several (up to 15 minutes!) minutes.
Solutions 4 -seems only last one ok:
*1. Mount the NFS share on the client with the noac option to disable attribute caching, 
   or use acdirmin=0,acdirmax=0 to just disable directory caching.
- neskusal som
*2. add cto (close-to-open) option in client fstab for adls:/home/dl6/local 
altri1> mount
...
adls:/home/dl6/local on /ram/local type nfs4 (rw,relatime,vers=4,rsize=524288,wsize=524288,namlen=255,hard,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=172.26.53.213,minorversion=0,local_lock=none,addr=128.142.192.234)

fstab.altri1: adls:/home/dl6/local /local nfs rw,cto 0 0
umount /local
mount adls:/home/dl6/local /local
adls:/home/dl6/local on /ram/local type nfs4 (rw,relatime,vers=4,rsize=524288,wsize=524288,namlen=255,hard,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=172.26.53.213,minorversion=0,local_lock=none,addr=128.142.192.234)

- cto nebavi
*3. opnedir/closedir on directory containing file on client invalidates the NFS cache.
- ctplib/fileManip.c modified (28.8.2017 in lab) with opendir/closedir to
  invalidate NFS cache.
- ctp_proxy/test_nfs.c -reading filter on client. NFS-cache invalidation
  does not work (at least not using opendir/closedir).

29.8.2017 - opendir/closedir removed from fileManip.c (not working)

lookupcache=none fstab.altri1 see:https://serverfault.com/questions/380303/nfs-cache-file-content-not-updated-on-client-when-modified-on-server/382728#382728
- not working after umount/mount /ram/local.
After reboot:
- not working even after reboot

*4. 'ls $dbctp' command forces cache refresh on client

'ls $dbctp' in 'openFile(): ok, seems works (tested with ctp_proxy/linux/test_nfs).
See also: https://www.avidandrew.com/understanding-nfs-caching.html

===30.8.2017
 repeat test from 25.8.
smicmd init PHYSICS_1 128 5
30.08.2017 11:30:25: no change in filtered inputs: ZDC TOF
...
-filter change: ZDC TOF -> ZDC

smicmd init hmpid 64 6
30.08.2017 11:35:25: ***  Warning:The list of filtered inputs changed, DDL2 not updated (will be done at SOR when there is no other active run)

smicmd stop hmpid
smicmd stop PHYSICS_1
smicmd init hmpid 64 7
DDL2_IR 48..25 24..1: 0x800000 0x400  0OM2 0PH0 0HCO
30.08.2017 11:38:40: The list of filtered inputs changed, DDL2 readout was updated accordingly
...

=== 14.9.2017 commit + deploy in p2
=== 1.11.2017 problem: NFS mounted $dbctp on alidcsvme001 (read only) not working in spite of 'ls $dbctp' in openFile()
Incident: 27.10.2017 filter changed, but the change not seen in alidcsvme001! see ddl2filter.log
- ctp_proxy/test_nfs -started several 10s times in P2 (i.e. readonly NFS), works alwasy
- is it not a bug (e.g. if new filter is subset of the old one, the old one stays in place?

Seems problem was in:
27.10.2017 19:53:47 reloading parted (reload request from ctpproxy)...
There were no 'reload requests' in between -see ddl2filter.log
28.10.2017 01:23:04 reloading parted (reload request from ctpproxy)...


Todo (only if sure that 'ls $dbctp' is not working in openFile):
alidcsvme001:v/vme/WORK/DB -here always fresh copy of ctpinputs.cfg and filter files (more files ?) from server

openFile: should look first into WORK/DB directory compare file with $dbctp and issue warning if different.
File in WORK/B should be taken if newer!

=== 2.11.2017 seems bug is in static archline vs lastfilterline -> it should be the same ariable!
test:
filter: PHOS V0
ctp.cfg: DDL2_IR 0OB3 0PH0 0HCO 0VBA 0TVX
ctpptoxy.sh startnd
ctp_proxy.log:
Warning input 0PH0 filtered out
Warning input 0VBA filtered out
DDL2_IR 48..25 24..1: 0x200 0x404  0OB3 0PH0 0HCO 0VBA 0TVX

change filter: PHOS
smicmd init PHYSICS_1 128 3
02.11.2017 16:40:34: CTP inputs filter:PHOS

Warning input 0PH0 filtered out
Warning input 0VBA filtered out
DDL2_IR 48..25 24..1: 0x200 0x404  0OB3 0PH0 0HCO 0VBA 0TVX    <-incorrect
02.11.2017 16:40:34: The list of filtered inputs changed, DDL2 readout was updated accordingly

Now using only EXTERN archline{[];....
filter: PHOS V0
ctp.cfg: DDL2_IR 0OB3 0PH0 0HCO 0VBA 0TVX
ctpptoxy.sh startnd
ctp_proxy.log:
Warning input 0PH0 filtered out
Warning input 0VBA filtered out
DDL2_IR 48..25 24..1: 0x200 0x404  0OB3 0PH0 0HCO 0VBA 0TVX

change filter: PHOS
smicmd init PHYSICS_1 128 3

=== 18.5.2018
286568
around 17:03 0PH0 went mad
ECS Start Time:	17/05/2018 16:16:32
CTP Start Time:	17/05/2018 16:17:49
CTP End Time:	17/05/2018 18:14:19

-rw-r--r--. 1 trigger alice  171485 May 17 19:20 ctp_proxy1805171920.log
-rw-r--r--. 1 trigger alice  343400 May 17 18:15 ctp_proxy1805171815.log
-rw-r--r--. 1 trigger alice  184487 May 17 14:49 ctp_proxy1805171449.log

17.05.2018 14:53:31 received:INFO actdb_getff:trgInput_PHOS:ON
17.05.2018 16:16:33 received:INFO actdb_getff:trgInput_PHOS:OFF
17.05.2018 18:17:34 received:INFO actdb_getff:trgInput_PHOS:OFF

Start run 286568:
ECS Start Time:	17/05/2018 16:16:32
-> ctp_proxy1805171815.log
SMIRTL - Thu May 17 16:16:33 2018 - TRIGGER::CTP executing INIT_PARTITION/PARTITION=PHYSICS_1/MASK=2456959/RUN_NUMBER=286568
...
INIT partition: PHYSICS_1 mask: 2456959 run:286568
orbit diffs: 1.167671 0.973896 
17.05.2018 16:16:33: DDL2 Orbit ok
INFO openFile:/local/trigger/v/vme/CFG/ctp/DB/filter r dir:/local/trigger/v/vme/CFG/ctp/DB
17.05.2018 16:16:33: New filter: ZDC
17.05.2018 16:16:33: CTP inputs filter:ZDC
17.05.2018 16:16:33: Filtering out a not connected input 0ZED
ERROR input 0VGA not found in ctpinputs.cfg
ERROR input 0UGC not connected in ctpinputs.cfg
ERROR input 0OMU not connected in ctpinputs.cfg
DDL2_IR 48..25 24..1: 0x818000 0x7e261  0VBA 0VBC 0T0C 0VGA 0UGC 0OMU 0V0M 0UBA 0UBC 0PH0 0MSL 0MSH 0MLL 0MUL 0EMC 0DMC
17.05.2018 16:16:33: ***  Warning:Some warnings connected with input filter ignored.
17.05.2018 16:16:33: timestamp:prepareRunConfig1: rcfgdel reload 0xc709

-> reading ACT/filter (pydimserver.log):
17.05.2018 16:16:33 received:rcfgdel reload 0xc709
17.05.2018 16:16:33 reloading parted (reload request from ctpproxy)...
17.05.2018 16:16:33 received:INFO filterlen:12 filter:ACT database err:0
17.05.2018 16:16:33 received:INFO actdb_getff:trgInput_PHOS:OFF

action: prepareRunConfig moved up -before the DDL2 IR update in ctp_InitPartition()
=== logbook
Martino found a bug in the 'trigger inputs filtering out' procedure:
When an input detector filtered out (ACT Lightweight operation), the classes with concerned input are removed, but
the input was not removed from the list of inputs contributing to DDL2 IR for the run immediately started after
(happened in run 286568 -0PH0 was NOT removed from the list of inputs contributing to DDL2 IR, it happened
only later in run 286569 when CTP was reconfigured).
See https://alice-logbook.cern.ch/logbook/date_online.php?p_cont=threadd&p_tid=588758&p_cidh=588758#le588758

For runs started after run 286624 it should be fixed.
Note: see also

https://alice-logbook.cern.ch/logbook/date_online.php?p_cont=threadd&p_tid=580010&p_cidh=580599#le580599

=== 10.6.2018 still not ok (run 287874)
seems actdb_getf in actdb_getPartition() is not enough -in addition (or instead), it should be called in 'rcfgdel reload'
can be done:
with new par: 'rcfgdel filter'  -reloading only filter -called from INIT_PART time in ctp_proxy
1. ctp_proxy.c: remove 2nd call: prepareRunConfig(NULL,3);     done
2. pydim/server.c: 'rcfgdel reload' added: actdb_getff() call   (no action before in this part)   done
   also added in ctp_InitProxy   done
3. 2s -> 3s ?: leaving 2s
-> deployd in P2 12.6.2018
