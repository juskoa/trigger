Contents:
run1: How to prepare list of CTP counter names
run2: How to prepare list of CTP counter names
History


run1: How to prepare list of CTP counter names (modified 25.10., 5.7.2010)
--------------------------------------------------------------------------
1. create ~/cnames file:  on alidcsvme001 or server (835):
   copy first VALID.LTUS ttcparts.cfg from the pit to $dbctp
   cd $VMEBDIR ; ./counters.py printnames >~/cnames
   remove Error: lines from ~/cnames
   check number of counters (should be 970):
   wc ~/cnames
Or in lab (we want full version of file from the pit):
cd $dbctp ; mv VALID.LTUS lab/ ; cp pit/VALID.LTUS .
cd $dbctp ; mv ttcparts.cfg lab/ ; cp pit/ttcparts.cfg .
cd $VMEBDIR ; ./counters.py printnames >~/cnames
cd $dbctp ; cp lab/VALID.LTUS .
cd $dbctp ; cp  lab/ttcparts.cfg .

2.
File cnames is OK for PVSS (Jozef). For web interface we need sorted, no holes. 
sort file by 2nd item (rel. address)
cd ; sort -n -k 2 -t ' ' cnames >cnames.sorted2

3. copy cnames.sorted2:
[pcalicebhm05] /home/trigger > cp cnames.sorted2 $VMECFDIR/dimcdistrib/cnames.sorted2.pit

4.
-repeat the same for .lab version (with lab version of VALID.LTUS 
and ttcparts.cfg):
...
[pcalicebhm05] /home/trigger > cp cnames.sorted2 /data/ClientCommonRootFs/usr/local/trigger/vd/vme/dimcdistrib/cnames.sorted2.pit

Example (notes from 11.11.):
---------------------------
Adding new counters (12 counters for each FO board):
- modify vme/ctp/ctpcounters.h
- modify vmeb/counters.py (has be in agreement with ctp/ctpcounters.h)  
  - at the beginning define correct # of counters on each board
  - class CTPcnts
      def addnewcnt
      def findAddr
      def printSPEC()
- create new cnames.sorted2 file (see above) and place it to master copy:
pcalicebhm05:/data/ClientCommonRootFs/usr/local/trigger/v/vme/dimcdistrib

run2: How to prepare list of CTP counter names (19.2.2014, 3.3.2014, 9.4.2015:)
----------------------------------------------------------
0. ctpcounters.h, vmeb/counters.py modified for new L0 (300 conters)
   9.4.2015                                       (500 conters)
   Plan:
   - uses spares where needed
   - add 200 counters to the end of all counters
0.5. recompile ctplib, vmecomp ctp, ctp_proxy
1. create ~/cnames file:  on avmes:
avmes>   cp VALID.LTUS VALID.LTUS.lab ; cp ttcparts.cfg ttcparts.cfg.lab
[jusko1@pcalicebhm11 t]$ scp ttcparts.cfg VALID.LTUS trigger@avmes:\$dbctp/

   cd $VMEBDIR ; ./counters.py printnames >~/cnames
   remove Error: lines from ~/cnames
   wc ~/cnames
   check number of counters (should be 970):
      1072 with L0 0xb1 fw (970+102 expected) 19.2.2014
      1110 with L0 0xb1 fw (970+140 expected) 19.2.2014
      1416 L1/2 300 cnts (1110+306  expected) 13.3.2014
      1560 FO/BUSY  cnts (1416+144  expected) 16.3.2014

cd $VMEBDIR ; ./counters.py printnames >~/cnames

2.
File cnames is OK for PVSS (Jozef). For web interface we need sorted, no holes. 
sort file by 2nd item (rel. address)
run1: cd ; sort -n -k 2 -t ' ' cnames >cnames1.sorted2
run2: cd ; sort -n -k 2 -t ' ' cnames >cnames.sortedG2
usage: cnames.sorted2
-run1 is called cnames1.sorted2 (trigdb.py can works with both)
- let's keep cnames1.sorted2 (run1) and cnames.sorted2 (run2) in:
  $dbctp
  dimcdistrib/   (link pointing here from /var/www/hml)

3. copy cnames.sorted2:
[pcalicebhm05] /home/trigger > cp cnames.sorted2 $VMECFDIR/dimcdistrib/cnames.sorted2.pit

4.
-repeat the same for .lab version (with lab version of VALID.LTUS 
and ttcparts.cfg):
...
[pcalicebhm05] /home/trigger > cp cnames.sorted2 /data/ClientCommonRootFs/usr/local/trigger/vd/vme/dimcdistrib/cnames.sorted2.pit
History
-------
Files cnames.sorted2 created 19.9. and left in DOC directory
   -corrected with ltu voltages 10.7.2007 (774 counters in total)
There is script: aj@pcalicebhm05:bin/dimcDistrib for preparing
dimclient distribution for 'CTP counters reading'.

22.10.2007:
New version of CTP counters:
- epochsecs/mics: ctp in 3rd column
- l2orbit: l2 in 3rd column
- 5th column (created by using VALID.LTUS):
  - N -not connected (fo and busy boards) or
  - ctp for 'ctp related' counters or
  - detector name taken from VALID.LTUS for 'detector related' counters:
    (?:1-6 X:1-4 *:1-24 (bsy input)   #:1-24 (det number+1))
fo?ppoutX 
fo?l0outX
fo?l1outX
fo?l2stroX
byin*
byin_end*
byin_last*
ltuvolts*

17.11.
spare812-817   6 runx counters -see 
dimservices.c:#define RUNXCOUNTERSSTART 812
Nov. 2008
14 counters  added on FO (34 -> 48) -glitches
i.e. now:970 before:886 counters 
970= 886+ (48-34)*6

12.6.2010
TSGROUP counter -replacing BUSY spare just before RUNX counters
8.2.2012
l0ifun3 and l0ifun4 added (instead of l0int_d and spare99)
3.3.2014
$dbctp/ + $VMECFDIR/dimcdistrib/cnames1.sorted2   -old run1 format
$dbctp/ + $VMECFDIR/dimcdistrib/cnames.sorted2   -new run2 format (now: 1110 lines)
ls -l $dbctp/cnames1.sorted2 $VMECFDIR/dimcdistrib/cnames1.sorted2
ls -l $dbctp/cnames.sorted2 $VMECFDIR/dimcdistrib/cnames.sorted2
13.3.2014
l1/2 boards (300 counters each) added, tested, seems ok.
22.2.2015
AD detector added (just rerunning counter.py printnames...)
11.5.2015
lmclstT counter added at position 298 (instead of a spare):
- vmeb/counters.py modified
 cd $VMEBDIR ; ./counters.py printnames >~/cnameslm
 sort -n -k 2 -t ' ' cnameslm >cnameslm.sorted2
dimcdistrib/cnames.sorted2 and $dbctp/cnames.sorted2i, manual change in 1 line:
lmclstT 298 l0 C ctp
seems:
dimcdistrib/cnames.sorted2 -> will go through git to p2
-still problem with RRD: how is the counter identified there?

26.8.2015
ipf counters added, int counters renamed
23.11.2015
ddl2_blocks counter added instead of spare1484 (busy relative ad: 152):
- vmeb/counters.py modified, ctp/ctpcounters.h
#define NCOUNTERS_BUSY_DDL2_BLOCKS 152 
i.e. it should be visible in rrd as  spare1484 -arranged in CNTWEB/cnt.py
still todo:  (??? seems not needed)
 cd $VMEBDIR ; ./counters.py printnames >~/cnameslm
 sort -n -k 2 -t ' ' cnameslm >cnameslm.sorted2
dimcdistrib/cnames.sorted2 and $dbctp/cnames.sorted2i, manual change in 1 line:
lmclstT 298 l0 C ctp

29.2.2016
CNTWEB/cnt.py: displayname ddl2blocks for spare1484
