21.3.2013
git tag pAend

8.4.2013
bin/vmebse.bash -echoint() added (no stdout when non-interactive shell)
8.4.2013
batch of new LTUs tested by Graham.
8.4.2013
devel/archived introduced for archived packages (not used generally).
archived/ltutests.tgz -testing new LTUs (with special firmware).
Prepared from na62 LTU testing sw.
See: Bigtest/doBackup.bash   -how backup was done on altrip2 + install notes

also to be kept in mind (not in devel/archived):
devel/../rf2ttc.tgz
      ../atlas/BOBR

17.4.2013
[pcalicebhm10] /home/dl/root/usr/local/trigger/devel/v/vme/ltu_proxy/noclasses >
cp *ync* $VMECFDIR/CFG/ltu/SLMproxy/
cp *ync*.slm $VMECFDIR/CFG/ltu/SLM/
i.e. *ync* files kept preferrably in  $VMECFDIR/CFG/ltu/SLMproxy/
(not in ltu_proxy/noclasses/)
17.4.
VMELIBS env. variable introduced (default: /lib/modules/daq)
26.4.
v/SPECS/ directory introduced for .spec files (currently for ltuclient+ltusw)
26.4.
bin/vmebse_lab.bash  -use ideas for vmebse.bash (todo)
17.5.2013
getDAQClusterInfo()
daqlogbook_update_clusters()
called in ctp_proxy. Idea: move these calls later to pydimserver -i.e.
DAQlogbook (and hence mysql) needed ONLY on server.
Steps:
- find alternative way to DIM (seems UDT is ok also for 1GB smaqs)
- measure current InitPartition phases
- improve pydimserver.py (now .partition loaded 2x for
  pcfg and rcfg)
- move the DAQlogbook operations to server
- after the move of DAQlogbook operations to server, measure again
20.5.
some testing with UDP-based Data Transfer (UDT) Library - version 4
done (available from git server). 
Goal: to be used with SSM esp. after LS1 with new L0 10G ethernet readout.
See:
aj@pcalicebhm11:git/udt-git
trigger@altri1:udt4
22.5.
prtProfTime() added in ctp_proxy
28.5.
ctp_proxy linked without mysql! (i.e. all daqlogbook updates
were moved to pydim). pysidm/server.c uses cshm* like ctpproxy
(i.e. not complete usage, only validLTUs and validCTPinputs)
28.5.
linux/ctpshm.exe  -compiled/linked on client+server -i.e. only the last one
(i.e. according to where compile/link done) works
DAQlogbook opened/closed in pydim/server.c always when ctpproxy restarted
according to DIM message received from ctpproxy
31.5.2013
CNTRRD/analyse.c, option  gnu/dec/hexa added
6.6.
pac demo (for PAC with clusters) is in aj@11:h/wsgi.
17.6.
git commit -a
24.6.
monitor/monitor.py -the server disk temperature monitoring added
28.6.
backup of /data/dl/root + snapshot to /mnt/alidcsfs001/Scratch/tri/2013
Idea: make it alice on diffrent computer (virtual?)
16.7.
monitor/monitor.py -hddtemp now hysteresis
CNTRRD/analyse.c   -bug fixed, header in output ascii file added
CNTRRD/analyse.py  -processing of data file obtained with analyse.c
pydim/bcmcheck.c   - added
17.7.
improved fanio/dim/server.c. Compiles+runs also in lab without hw (using
VMESITE env. vaiable).
22/23.7. PauseResume for clusters ongoing...
31.7. startswtrig() -> returns L2_ORBIT of event generation
5.8. new version of daqlogbook -used for slc6, Vasco compiled it for slc5
64bit. For 32bit: we do not need it (but in pit we have 32bit server) 
-all daqlogbook access should be done from
server
7.8.
ctp_Pause/ctp_Resume: more checks done, 
still todo: bakery locks (look for bakery) for Pause/Resume/Sync/clgroups
git pull
git commit --author Jusko
git push
3.10.
trigger/devel/archived moved up 1 level and emoved from git, i.e. is now in
trigger/
git commit -a  and push , new clone created on avmes /home/dl6/local/trigger

29.10.2013
plan:
/home/dl6/local/trigger -development version (git r/w) for altri1/2 avmes
/home/dl6/local/trigger_run1 -to be used for other diskless on CERN network.
                       - can be used also for the pit (if needed)
avmes: slc6 with altri1/2 -seems works from today -let's use it
                       for some days before:
update pcalicebhm10 to slc6 and move diskless server from avmes on it
30.10.2013
run1 user and branch created. whole trigger project cloned, i.e. now
in /home/dl6/trigger -> development
   /home/dl6/trigger_run1 -> with old (50 classes) boards + CERN public
     this one always branch run1 !
31.10.
'ctp' should work with new L0/L1/L2 (100 classes, see devdbg run1_todone).
run1 user seems ok. 6 commands compiling everything (3 on run1@avmes + 3 on
run1@altri1).
script -c 'makeall allctp' ~/allctp.make
script -c 'makeall allltu' ~/allltu.make
script -c 'makeall others' ~/others.make
Problem with 'Classes' widget in ctp is seen also with old sw (i.e. cannot
be open again when closed)
3.11.2013
vmeaistd.h MAXNAMES 400 -> 600
11.11.2013
bakery: the swtrigger lock now separated for ctp (2) and dims (3).
GenSwtrg_op() -special for ctp interface
Note: slightly different for run1 version (also modified)
11.11.2013
vmeb/trigdb.py cables   -added, printing the names of all L0+L1+L2 inputs
in L0.INPUTS + VALID.CTPINPUTS.
18.11.
trigger@aldaqctp2 -daq readout ok (see
trigger@altri1:$VMEWORKDIR/WORK/pat1.txt)
20.11.2013
ssmbrowser: allows save/restore including SSMs content
yet todo: stdalone browser for browsing on any comp (not vme)
28.11.
python -m compileall .   -recompile 
3.11.
ltu_proxy: daqlogbook usage moved to pydim/server.c (see history.txt)
ctplib/ttcmisubs.c moved to ttcmi/ttcmisubs.c (vme/ttcmidaemons linking
also modified accordingly)
3.12.
makeall ok on bhm10+altrip2, i.e.:
script -c 'makeall allctp clean' ~/makeall_allctp.log
script -c 'makeall allltu clean' ~/makeall_allltu.log
script -c 'makeall others clean' ~/makeall_others.log
13.1.2014
git push. We do not know about errors in LTU firmware (seems 100 classes
ok)
14.1.
FOs --> BUSY button in FOs action changed:
before: when pressed 'HW not updated indication' was not done
now: when the button pressed, 'HW not updated' indicator
     goes red and BUSY_CLUSTER word is than reprogrammed when HW written.
     This happens even if BUSY_CLUSTER words were not changed (but
     we are sure the displayed info agrees with HW).
23.1.2014 trigger@avmes:~/rpmbuild/RPMS/ltuclient-2.10-1.x86_64.rpm preapred
30.1.2014
BUSY_CTPDEADTIME was 60 before 30.1.2014
From now is 60+50=110 which corresponds to real deadtime (minimal
distance of 2 L0 in 2 non overlaping clusters) to 112BCs= 2.8us
todo: measure with scope
7.2.
rl@avmes,altri1: git way added. I.e.:
main development: trigger@avmes,altri1
Roman: rl@avmes,altri1
production for CERN public net: trigger@pcalicebhm10,altri2
12.2.
CNTWEB/ltus.py -grouping added
13.3.
CNTWEB/ltus.py -Yaxis logarithmic/linear added
19.2.2014
vme/fanio/dim  exportsc.bash added
12.3.
modifications for l1,l2 counters (300 counters each, 2-bit accumulators for slow counters)
15.3.
mod. for busy/fo. cnames.sorted2: 1560 lines, fo: 0xB0 problem with timing
18.3.
bug fixed in ltulib/ltuinit.c (did not recognize correctly ltuver2 boards
with numbers > 64)
18.3.
small bug fixed in ssmbrowser.py: now a ssm dump written only once
when asked to be saved together with signal names
21.3.
New rrd db created on avmes (1560 ctp counters). 
Conversion rrddb->dsiplayname (spare17->l0LMbv) done in CNTRRD/cnt.py.
Counter.co2rrdname() -changed. Now doing nothing, i.e. cnames.sorted2 names
are equal to those used in rrddb.
Prgrams using cnames.sorted2 should:
- recognize TSGROUP counter by looking for 'spare*TSGROUP'
- recognize 6 runx counters by looking for 'spare*runx'
1.4.2013
vme/fanio/dim/server.c -modified. 
-now it works together with PVSS SSD client.
-STATUS service automatically updated (no polling required from dim client)
3.4.2013
pydim/act_main.c ok now (using shm on server)
3.4.2013
ctpproxy start problem:
03.04.2014 14:34:22: timestamp:TAGctprestart: rcfgdel useDAQLOGBOOK
rc from "CTPRCFG/RCFG rcfgdel ignore/useDAQLOGBOOK":1 (1 is OK,but check callback)
PID 25131 - Thu Apr  3 14:34:22 2014 - (ERROR) Client Connecting to CTPRCFG on avmes.cern.ch: No route to host
03.04.2014 14:34:22: ***  Error:timestamp:callback:DIM command CTPRCFG/RCFG delete(testifpydimON) failed.
03.04.2014 14:34:23: timestamp:prepareRunConfig1: rcfgdel ALL 0
is casued by firewall preventing DIM servcie on avmes!
fixed by adding 2 lines to /etc/sysconfig/iptables:
-A INPUT -m state --state NEW -m tcp -p tcp --dport 2505 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 5100:5200 -j ACCEPT

7.4.2014
local/trigger_run1 -cloned from github on bhm10. I.e. from now:
run1@altri1   -running run1 sw with new firmware
run1@altri2   -running run1 sw with old firmware -problematic, 
  only makeall allctp done, todo: better environment set...
10.4.2014
miclock_fifo.py -takes inputs from /tmp/micfifo instead of stdin. I.e. 
  prepared now to be driven from httpd and html intrface.
6.6.2014
ctplib/notInCrate.c/l0C0()    0: L0 board   >0: LM0 board
10.6.
altri2 crate: all baords fy loaded as in altri1 crate:
       run1  un2:10.6.2014
busy   a8    a9
l0     ae    b1
l1     a4    a6
l2     a7    a8
int    a8    ac
fo     ac    b1
10.6.
vmecrate inputs
- modified for LM0 (works also with old L0)
12.6.
caenvme.setup added to bin/distrib, vmewrap.c modified for caenvme (Pietro's request)
12.6.
ctplib/initCTP.c: LM0 ctp switch defaults to: 1->1 2->2 ...
12.6.
ctplib/scopeab.c
SCOPE_SELECT is different (SCOPE_SELECTbfi) for BSY,FO, INT boards
19.6.
vme/simple/  -rndtest testing an array of VME regs in a loop
ctp.h:
L0_VETOr2 -used for LM0, L0_VETO -to be used with L0 board
L0_MASK   -use ONLY for L0
L0_INVERTac -the same for L0/LM0
L0_CONDIION -the same for L0/LM0
24.6.
ctp.printsetDSCG() -works for L0 + LM0
-> git push -> pit
25.6
ctp.cfg reading in 'vmecrate ctp': sometimes not ok -seems
  this happens when dos format of ctp.cfg (use dos2unix to convert it to unix
  format)
vmeb/cmdlin2 -deprecated popen2 replaced by subprocess
ctp.printsetDSCG() -bug fixed (never worked in run1)
25.6.
simple.partition -started using 'ctpproxy startest' (class1 only)
30.6.
http://cern.ch/juskoa/ltu/ltuclient-2.10-1.x86_64.rpm published to
alice-daq-support
6.7.
1st start of run with satrttest+LM0 seems ok:
- 1 class: BC1 50% downscale (simple.partition)
11.7.
diprfrx
[trigger@alidcsvme017 WORK]$ diprfrx.sh start
[trigger@alidcsvme017 WORK]$ cat diprfrx.log
log4cxx: No appender could be found for logger (dip.system.factory).
log4cxx: Please initialize the log4cxx system properly.

14.7.
ctpwsgi: 
-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT
3.8.2014
act.exe: bug fixed (actdb_close() was called prematurelly
4.8.2014 (around)
posix queues introduced in ctp_proxy/main_ctp.c
14.8 (around)
TDAQInfo in vmeblib/daqlogbook.h... adjusted for 100 classes (was 50)
(2x unsigned long long instead of 2x w32)
26.8.
validate.rpm -now for 100 classes (implemented in the pit)
1.9.2014
pydim/ctpcnames.c added. 
ATTENTION! Tpartition.h MAXCTPINPUTLENGTH 16 (was 40) -> i.e.
recompile all + reload SHM . shm length (ipcs -m) changed from 12300 -> 10860
2.9.2014
CTPRCFG/CNAMES service is included in pydim. 
todo: Does not supply runN for inputs (parted.py contains code finding
      the inputs used by given partition)
5.9.
test:
[trigger@avmes pydim]$ linux_s/client CTPRCFG/RCFG
todo: ALICE, SERVER, SERVER2 -3 CTP setups in pit altri1, altri2
5.9.
bin/smicmd
8.9.
VMESITE:
        where, DIM_DNS_NODE
ALICE    p2, aldaqecs
SERVER   avmes+altri1, avmes
SERVER2  bhm10+altri2/p2, pcald30
PRIVATE  other comps
8.9. --->p2
13.9.
bug L1_INVERT fixed (still checks, sometimes bad, for classes >=44/45)
23.9.
git p2->lab
26.9.
vmeb/counters.py changed. 
Goal: 
ctp counters: 
no modification (i.e. accruals done in c code in 
ctplib/readCounters.c/readCounters. dims.exe -counters read 1/min for RRD.
ltu counters: 
1. accruals calculation is now in vmeb/counters.py
Before: in ltulib/... -i.e. in ltu.exe started from ltuproxy over popen -not
correct when interactive usage from 2 clients.
2. counters readings done 1/sec into shared memory -i.e. only 
every 60th reading used for rrd.
1/sec reading used for new dim service det/MONBUSY signaling
a detector busy time as a float number 0 - 100.
3. getCounters(), in ltulib/ltuCounters.c: 2nd, accr. parameter 
is not meaningfull.
getCounters(), does'not read real LTU counters -
they are taken from shared memory, if available. Consequence:
2 readings, i.e. calling getCounters(), less than 1 sec apart are the same.
2.10.2014
still finish updateMONBUSY in ltu_proxy/ltudimservices.c
2.10.2014
avmes ->github ->bhm10
9.10.2014
ltu_proxy/ltudimservices.c -seems ok (i.e. only 1 thread reading
ltu counters and shared by all ltuclients).
13.10.
avmes ->github->p2
24.10.
vme/ltut added (development, also compile/link is in trd@alidcsme004)
27.10.
ctplib/busyTools.c -bug fixed (bad bytime from run1 reladr, and bakery added)
27.10.
vmeb/myw.py frommsL0pr(): L0pr class parameter now checked 0<xx%<100
29.10.
hmpid feecmd12 removed (when switching LTU to stdalone in ltu_proxy.c and
ltu_utils.c)
ctpproxy.py -should be ok now (still programming CTPswitch and
starting ctpproxy with: startnr NO READOUT !)
30.10.
ddr3 regs added in ctp.h, first simple tests with ddr3 (button DDR3 in ctp
exp. available)
30.10.
ltuclient-2.11-1.x86_64.rpm preapred for ARCC (also on web) on avmes
5.11.
DDR3 basics (ctp.c) prepared. Random test with 64MB ok
25.11.
alignment2daq fixed in pydim (was not written to daq till now)
3.12.2014
pydim/simpleClient.py   -testing det/MONBUSY possible
3.12.2014
ctp switch: only in code: ctplib/initCTP.c + vmeb/trigdb.py
10.12.
ctpinputs.cfg now instead of L0.INPUTS VALID.CTPINPUTS CTP.SWITCH
(see devdbg/ctpinputs_cfg)
10.12.
AD introduced - see devdbg/ad
15.1.2015
ctp_proxy.c: ctp_StartPartition() modified (case when SOD cannot be sent)
14.01.2015 17:40:31: timestamp:prepareRunConfig2:rc 1
getBusyMaskPartition: detectors:0x0 0PåÐãp
- now it should be ok, i.e. not seen in the log
16.1.2015
ltudimservices.c: ttcFEEcmd( allowed
16.1.2015
- stopSSM(), condstopSSM(): in case of L0/LM0 always try to stop also L1
- SEL_LM changed: now 4 regs (see ctp.h, ctplib/initCTP.c)
20.1.2015
- not good idea to stop always L1 after L0 stopped, abandoned
26.1.2015
validate 5.  (distribution on web cern.ch/juskoa)
28.1.2015
CNTWEB - Upper limit added for CTP counters
28.1.
ttcmidaemons/ttcmidims.c: bug fixed in log msgs: 'QPLLcaba qpllnow'
instead of 'SHIFTcaba shiftnow'
1.2.2015
ctp_proxy.c, xcountersStart: check if xcounters active, if not: quit
1.2.2015
xcounters check moved on server (xcountersdaq is running there) to
pydim/server.c check_xcounters()
11.2.2015
xcounters.sh runs in lab too (as trigger, in p2 as tri)
11.2.
hostname -s -> everywhere
12.2.
SYNCH_ADDr2: edge is shifted by 3 bits to the left (bits 15+7 instead of 12+4)
and delay is now 5 bits (0..31 BCs)
23.2.
ttcmidims - services added
ssm[].lopmo added (for LM0 ssm status)
25.2.
Tpartition.c: modified to acomodate change of LM from 32 ->11 switch input
1.3.
TTCMI(/RFRX service added, ttcmidaemons,ttcmi reshuffled a bit (i.e. 
now better for debug in lab)
12.3.2015 ------------------------ git -update in p2, timing
12.3.
-calcINT_BCOFFSET() changed (3559-> 3560)
-LOCAL ORBIT hardcoded in initCTP removed (i.e. we use external from now)
13.3.
- bug in LM patch fixed: 'T0 triggering for technical with TRD in readout' in 
  getDAQClusterInfo() in ctp_proxy/cfg2part.c
16.3.
L0-L1: +20BCs. changed: ltulib/ltuinit.c, ctp.cfg
also L2_DELAY adjusted (now TL2+66, before TL2)
18.3.
setTTCint() changed -new version of table, TRD_TTCINIT_BIT introduced
25.3.
pydim/server.c -bug fixed for in DOcom2daq() -should now
send comment to daqlogbook
25.3.
swtrigger.c: BC=BC-2 for calibration triggers! (in pit)
25.3.
readConters.c: bug in counters reading: all counters have to be readout from
the board -evenm if not need -see readCountersBoard()
28.3
bin/smaq ok -trg account created on avmes + alidcscom707/835 for shifter
smaq: to be started on trigger@alidcsvme001 ->scp-> trg@707,
i.e. smaq root should run on trg@707
7.4.
0xc5:
inputsTools.c: get/set lmdelay() and LM+L0 switches programming
               todo: ctpinputs.cfg not: LM vals not yet taken
initCTP.c: LM_L0_TIME:17, LM_RANDOM1/2 desync
           ALL_RARE_FLAG: common for LM+L0
           rates2hwinit(): LM+L0
ctpcfg.py: see: lmrnds lmbcds constants 
  hw -> py: reshuf used in readShared (getShared() + 4 values)
  hw <- py: setShared3() added (for lm_ rnd1/2 bc1/2), see def writeShared
    RBIF, INTSEL lines in .cfg file: not changed!, LMRB line added
  py-> file: def writeShared
  file->py: def loadfile,readSharedline modified
8.4.
200 L0 counters in separate chunk (at the end of big array) added
modified: ctp/ctp.c ctp.h ctpcounters.h ctplib/readCounters
          vmeb/counters.py
new cnames.sorted2 created (old one: cnamesLS1.sorted2).
todo: new RRD database needed
      recompile rd
      class names (for Giacinto) to be checked
15.4. hofix-phpmon
bug in readTables.c fixed: if L0 input not connected to CTPswitch (0)
and CTPinput column is not 0 this input is regarded as 'unconnected'.
Anyhow, we should keep following rule (ctpinputs.cfg is read
also from python, it is not clear how such case is interpreted!):
if L0 is not connected to CTPswitch (0) the 0 has to be put
also to the ctp input(1..24) column.
17.4.
LM0: FPGA version occupies 2 bytes (0xc601) -readBICfile.c changed
29.4.
in p2 changed link for clockshift. Now:
835:$dbctp/clockshift -> /home/dl6/snapshot/alidcsvme017/home/alice/trigger/v/vme/CFG/clockshift
before
017:v/vme/CFG/clockshift -> /local/trigger/v/vme/CFG/ctp/DB/clockshift
i.e. now writtable from 017 (before from 835). I.e. ttcmidims.c
running on 017 can update clockshift
28.5.
l0f: now when pure LM: applied at LM for TRD class
    not pure: applied at L0 for TRD class (i.e. 40mhz at L0)
28.5.
CNTRRD/analyse -can be exported (see exportana.bash)
29.5.
bug in inputsTools.c (lmdelay setting) fixed
4.6.
sxb daq readout ddl: trigger@pcaldctp2
ctpro >/dev/null
4.6.
ctp.c testreates() -option 10: LM rates added
5.6.
Tpartition.c,... SDSCG groups for LM level initialised properly also when
partition loaded (before: ok only when ctpproxy restarted).
todo: still there is no way how to downscale synchronously on LM level
-probaly should be done independently form L0 ?
---> git p2
5.6.
bugs fixed in clgroups.c
12.6
changes made on bhm10: still can be used with c605 version (old L0FUN1/2).
Main changes:
- adjusted for bhm10/altri2 setup (SERVER2)
- ctp expetr software allows to work with c606 -> i.e. to load 8inputs-LUTs
  for new L0FUN1/2/3/4
copying these cahnges to avmes (using git)
6.7.2015
validate: returns now *det for 'effectively filtered out' detectors
7.7.
ctp_proxy.c
1. ctp_Resume... leaves gcalib stopped if there is at least 1 detector still in
paused state.
2.
ctp_proxy.c, ctp_StopPartition:
cshmDelPartition(part->name); moved up -just after setPartDAQBusy and before xcountersStop
(before it was after xcountersStop). THis should soleve discrepancy betweemn
cal. caounters in daq and EOR message.
13.7.2015
- bug in SDSCG init for LM classes fixed -uncommented line
  HW.lmsdgs[hwclass]= SDGS[... in ctp_proxy.c addClasses2HW
- checkmodLM modified: now also l0f considered (before: fasle warning 40Mhz
  for TRD classes if only l0f on LM level used)
- line //if(strlen(tsname) != 0)exit(1); now commented in Tpartition.c load2HW
  -seems remnant from debugging, not allowing to start another partition when
  TIMESHARING is active in already loaded partition
- gcalib.sh crashed 11.7. monitor/monitor.py now can be used to moniotr it
  (with auto resatrt) -started usage in P2
14.7.2015
- pydimserver.py: saving in addition PCFG/qRUNNUNBER.pcfg -sent
  to ctpproxy in pcfg time command
14.7.2015
- parted.py: 51-> 101 (2 lines) in findfirst +
  ctp_proxy.c 51-> 101 (2 lines) in addClasses2HW
changed also in p2 !
17.7.2015
ltu_proxy/ltudimservicers.c -fee command added (spd request) executing only
ttcFEEreset(). Also in p2!
19.7.2015
lhc2ctp.py modified -bug fixed, now ok also for SPSspace !=0
19.7.2015
notes for l0f8 -4 l0f functions with 8 inputs:
FPGAVERSION environment has priority over TRG_DBED/trgglobs.py L0VER
21.7.2015
0xc606 in p2 (l0f8 functionality). 
git branches:
P2: master
trigger@avmes, trigger@bhm10: master -as in p2, dvlp: bit modifications +
after each comit in master do: git merge master. DO often comit in dvlp,
especially before merging from master.
22.7.
INRDN1 option added in .partition definition
