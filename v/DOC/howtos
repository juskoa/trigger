grep ^=== howtos
=== print out current L0 inputs:
[alidcscom026] /data/ClientCommonRootFs/usr/local/trigger/v/vmeb > python
Python 2.3.4 (#1, Dec 11 2007, 21:18:01) 
[GCC 3.4.6 20060404 (Red Hat 3.4.6-9)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
import trigdb
t=trigdb.TrgVALIDINPUTS()
t.getL012inputs('0')
'L0 inputs: 1:0SMB 2:0VBA 3:0VBC 4:0BPA 5:0BPC 6:0MUL 7:0MSL 8:0MLL 9:0MUH 10:0SPF 11:0SH1 12:0SCO 13:0SH2 14:0SBK 15:0LSR 16:0OIN 17:0OUP 18:0AMU 19:0VBK 20:0TCE 21:0TSC 22:0HWU 23:0EMC 24:0PH0 '
>>> 

=== check if ACT is available:
[alidcscom188] /data/dl/root/usr/local/trigger/v/vme/ctp_proxy > mysql -u acttrg -pCBNRR2be -h aldaqdb ACT
ERROR 1044 (42000): Access denied for user 'acttrg'@'%' to database 'ACT'

=== 3. catch terminal output:
script file.script
...
CTRL-D

=== send SMI command manually:
/opt/smi/linux/smiSendCommand TRIGGER::CTP STOP_PARTITION -ps PARTITION pamb2 -dbg
-dbg: don't send, just see how it looks like. 

=== mount samba on alidcscom188: -----------------------
[root@alidcscom188 dcsScripts]# pwd
/root/dcsScripts
[root@alidcscom188 dcsScripts]# ./mntDcsUser juskoa
- type nice passwd 4x
- use /mnt/alidcsfs001/Scratch/tri for our backups

=== python recompile: python -m compileall .    (see bin/pyrecomp)

=== CTP readout in lab
trigger@pcaldctp2

ctpro >/dev/null
which ctpro
alias ctpro='cd /date/trigger/Linux; ./ctpServer'

=== VMESITE=PRIVATE how to start runs (debug ctpproxy,pydim,gcalib,...)
Allow ssh .pcfg -> ctp machine:
allowmeon.bash aj localhost

echo $DIM_DNS_NODE
/opt/dim/linux/dns &

redis:
alias redisstart='cd $VMEWORKDIR/WORK/REDIS; $REDIS/src/redis-server trgredis.conf'
redisstart    (needs ~/v/vme/WORK/REDIS/... )

smicmd TRIGGER
[aj@pcalicebhm11 WORK]$ tail -f smicmd.log 
LOAD_FAILURE -> ack, ERROR -> reset

startClients.bash pydim start
ctpproxy.sh startnd
$dbctp/gcalib.cfg
[aj@pcalicebhm11 vme]$ /home/aj/git/trigger/v/vme/ctp_proxy/linux/gcalib.exe 

alias sedev='cd ~/git/trigger; . v/bin/vmebse.bash ; unset DATE_DAQLOGBOOK_DIR ; unset ACT_DB ; export VMEDRIVER=SIMVME ; export DIM_DNS_NODE=localhost ; alias ctp="vmecrate nbi ctp" ; test -z `ps -C dns -o pid=` && /opt/dim/lnux/dns'

=== smicmd -imitating ECS actions
smicmd    -without parameters, help is printed

=== sort ctpinputs.cfg
Sort by Switch input (8th field)
sort -k8,8n ctpinputs.cfg |more
grep -v '^#' ctpinputs.cfg |sort -k8n,8n |more

=== orbit sync in ddl2 (after powercut)
altri2:  vmecrate ttcmi=0x0f00000              -to get clock in lab!
altri1: 
vmecrate ctp
-> File -> load ajddl12.cfg
   i.e.: 5 green bits in Classes: LMrrnd2 LMdeadtime LMclassmask 
                                  LM-L0busy Classmask
-> File -> write hw
-> LTU HMPID: disable busy, put in GLOBAL
-> check counters (L2aseq rate >0)
orbitddl2.py configrunset                  -should be ok now

=== start daemons
[root@alidcscom835 ~]# service httpd start
      adls

only in p2:
tri@alidcscom707 -> root -> mount /local
alidcscom835:/home/dl6/local /local nfs ro,defaults 0 0
alidcscom521 mounts:

startClients.bash ttcmidim start     (in lab on altri2, not needed)
startClients.bash gmonscal start     from trigger@alitrir (707)

check redis@835 or redis@adls account. redstatus,...
startClients.bash pydim start
ctpproxy.sh startnd
ctpproxy.sh stop
ctpdims start
startClients.bash xcounters start    
  seems better: ssh tri@local host ; xcounters.sh stop/start
startClients.bash rrd start
startClients.bash html start
startClients.bash ctpwsgi start
startClients.bash masksServer start
startClients.bash gcalib start
startClients.bash udpmon start
cd monitor
irdim: ik

