#!/bin/bash
function getmask() {
ltu=`echo $1 | tr /a-z/ /A-Z/`
echo "looking for $ltu..."
mask=""
while read line ;do 
  nn=$(($nn+1));
  if test -z "$line" ;then
    continue
  fi
  #set - $line
  set - $(IFS="= "; echo $line)
  #echo $nn: $line
  #echo "   1:$1 2:$2"
  if [ "$ltu" = "$1" ] ;then
    mask=$((1<<$2))
    break
  fi
done < "$dbctp/VALID.LTUS"
}
#pname="PHYSICS_1"
pname="$2"
if [ "$1" = 'init' ] ;then
  #echo "\$#" $#
  if [ $# -eq 4 ] ;then
    getmask $3   # result available in $mask
    if [ -z "$mask" ] ;then
      mask=$3   # unknown detector, i.e. decimal mask given
      printf -v hmask "0x%x" $mask
      echo "decimal mask: $mask = $hmask"
    else
      printf -v hmask "0x%x" $mask
      echo "detector: $3 corresponding mask:$mask =  $hmask"
    fi
    # following does not work (MASK obligatory!)
    #/opt/smi/linux/smiSendCommand TRIGGER::CTP INIT_PARTITION -ps PARTITION $pname -ps RUN_NUMBER $3 -ps ACT_CONFIG NO
    # ACO 65536 PHOS: 128   HMPID:64    PHOS+HMPID:128+64=192
    /opt/smi/linux/smiSendCommand TRIGGER::CTP INIT_PARTITION -ps PARTITION $pname -ps MASK $mask -ps RUN_NUMBER $4 -ps ACT_CONFIG NO
  else
    echo "smicmd init partition decmask RUNN        or"
    echo "smicmd init partition detname RUNN        has to be given"
  fi
elif [ "$1" = "start" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP START_PARTITION -ps PARTITION $pname
elif [ "$1" = "pause" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP PAUSE_PARTITION -ps PARTITION $pname
elif [ "$1" = "resume" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP RESUME_PARTITION -ps PARTITION $pname
elif [ "$1" = "sync" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP SYNC -ps PARTITION $pname
elif [ "$1" = "stop" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP STOP_PARTITION -ps PARTITION $pname
elif [ "$1" = "ack" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP ACKNOWLEDGE -ps PARTITION $pname
elif [ "$1" = "reset" ] ;then
    /opt/smi/linux/smiSendCommand TRIGGER::CTP RESET -ps PARTITION $pname
elif [ "$1" = "TRIGGER" ] ;then
# /opt/smi/linux/smiPreproc TRIGGER.smipp TRIGGER.smi
# /opt/smi/linux/smiTrans TRIGGER.smi TRIGGER.sobj
# following cmd takes .sobj as input
   /opt/smi/linux/smiSM TRIGGER $dbctp/TRIGGER 2>&1>$VMEWORKDIR/WORK/smicmd.log &
cat - <<-EOF

see $VMEWORKDIR/WORK/smicmd.log
EOF
else
cat - <<-EOF

Partition name: $pname
smicmd init PARTNAME decmask RUNN
                     detname    -in case only 1 detector allowed in partition,
                                 its name can be given (e.g. hmpid)
smicmd start/stop/pause/resume/sync/ack/reset PARTNAME

General usage:
1. make sure dns is running on adls (nohup /opt/dim/linux/dns &)
2.  smicmd TRIGGER      -start private TRIGGER domain (on adls or altri1)
    ONLY 1 instance can be active (it will crash if another instance is running already)
    usefull (open in separate window): tail -f $VMEWORKDIR/WORK/smicmd.log
3. use smicmd init/start/stop/.... PARTNAME as suggested above
4. Note about mask:  Give it in decimal notation, i.e:
0x80 128 PHOS
0x40  64 HMPID
0xc0 192 PHOS HMPID
0x10  16 TRD
0x90 144 TRD PHOS
0x50  80 TRD HMPID
on altri2/bhm10:
0x100 256 CPV  -only on altri2/bhm10

LOAD_FAILURE: has to be ack-ed, i.e. 'smicmd ack partname'
EOF
fi
echo "smiSendCommnad rc:" $?
