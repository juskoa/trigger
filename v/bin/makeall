#!/bin/bash
# Start this script:
# makeall 2>&1>~/makeall.gccor++
# better, start on both (server + client, i.e. 6times):
# script -c 'makeall allctp clean' ~/makeall_allctp.log
# script -c 'makeall allltu clean' ~/makeall_allltu.log
# script -c 'makeall others clean' ~/makeall_others.log

function cleancmp() {
if [ -n "$SERVER" ] ;then
  echo --- $1 not done on server:$SERVER
  return
fi
echo
echo "=======================### vmecomp package $1 $2 =================================="
cd $VMECFDIR/$1 
if [ "$2" == "clean" ] ;then
  make -f $1.make clean
fi
$VMEBDIR/comp.py $1
rc=$?
if [ $rc != 0 ] ;then
echo "vmecomp package $1 exiting with rc:$rc"
exit
fi
}
function cleanmake() {
if [ -n "$SERVER" -a "$1" = 'c' ] ;then
  echo "--- $2 not done ($1, but this is server:$SERVER"
  return
fi
if [ -z "$SERVER" -a "$1" = 's' ] ;then
  echo "--- $2 not done ($1, but this is client)"
  return
fi
echo
echo "=======================### make package $2 $3 ====================================="
cd $VMECFDIR/$2 
if [ "$3" == "clean" ] ;then
  make clean
fi
make
rc=$?
if [ $rc != 0 ] ;then
echo "making package $1 exiting with rc:$rc"
exit
fi
}
#function complinktoobusy() {
#cd $VMECFDIR/ctp
#g++ -DBUSYEXE -I $VMEBDIR/vmeblib -I $VMECFDIR/ctp -I$VMECFDIR/ctp_proxy toobusy.c -Lctplib -lctp -L $VMEBDIR/vmeblib -lvmeb -L/lib/modules/daq -lvme_rcc -lrcc_error -lio_rcc -lcmem_rcc  -o toobusy.exe
#}
# following packages not working for reasons:
# to be modified for g++:
#cleancmp ctpt
#
OTHERSmake=': ctp_proxy smaq ltu/ltulib SSMANA ltu_proxy ltudim tinproxy orbitsync dimcdistrib dimsc MORELTUS pydim CNTRRD ttcmidaemons filling dimcoff fanio/dim monscal++:'
OTHERScmp=': ltu VME2FPGA fanio ttcmi bobr switch ttcit :'
#

HOSTNAME=`hostname -s`
if [ $HOSTNAME = 'pcalicebhm10' -o  $HOSTNAME = 'alidcscom188' \
  -o  $HOSTNAME = 'alidcscom835' -o  $HOSTNAME = 'adls' ] ;then
  SERVER=$HOSTNAME
else
  unset SERVER
fi
if [ -n "$SERVER" ] ;then
  echo "Server: $SERVER"
else
  echo "Client."
fi
if [ "$#" -eq 0 ] ;then
cat - <<-EOF
Usage:
Repeat 3 steps on adls first, than on altri1 (alidcsvme008):
makeall allctp [clean] -comp/link vmeb, vmeb/vmeblib, ctplib,ctp,ctp_proxy,smaq
                        toobusy, ctp++
makeall allltu [clean] -   ltulib,ltu,SSMANA,VME2FPGA,ltu_proxy, ltudim
makeall others [clean] 
o


script -c 'makeall others clean' ~/others.makelog
                       -compile this:
$OTHERSmake
$OTHERScmp

makeall package [clean]     -compile/link only 1 package (see above for names)

See makeallscript, which is:
- renaming old logs to .old in ~/logs  
- calling this script using script 
- unix2dos logfile

EOF
exit
fi
if [ "$2" = "clean" ] ;then
  CLEAN="clean"
else
  CLEAN=""
fi
if [ "$1" = "allctp" ] ;then
echo "=======================### make package vmeb clean ONLY on vme client ======================"
if [ -n "$SERVER" ] ;then
  echo "--- vmeb not done (this is client)"
else
cd $VMEBDIR ; make -f makefile_vmeb clean ; make -f makefile_vmeb
fi
echo "=======================### make package vmeblib clean ====================================="
cd $VMEBDIR/vmeblib ; make clean ; make
cleanmake s ctp/ctplib $CLEAN
#complink ctp/ctplib $CLEAN
cleancmp ctp $CLEAN
#complinktoobusy
cleanmake s ctp_proxy $CLEAN
cleanmake c toobusy
cleanmake c ctp++ $CLEAN
#complink smaq
cleanmake c smaq $CLEAN
elif [ "$1" = "allltu" ] ;then
cleanmake s ltu/ltulib $CLEAN
cleanmake s ltudim  $CLEAN
cleanmake c SSMANA $CLEAN
cleanmake c ltu_proxy $CLEAN
cleancmp ltu $CLEAN
cleancmp VME2FPGA $CLEAN
elif [ "$1" = "tinproxy" -o "$1" = "dimcdistrib" -o "$1" = "pydim" -o \
"$1" = "CNTRRD" -o "$1" = "ttcmidaemons" -o "$1" = "filling" -o \
"$1" = "dimcoff" -o "$1" = "monscal++" -o "$1" = "fanio/dim" ] ;then
cleanmake s $1 $CLEAN
elif [ "$1" = "orbitsync" -o "$1" = "MORELTUS" ] ;then
cleanmake c $1 $CLEAN
elif [ "$1" = "fanio" -o "$1" = "ttcmi" -o "$1" = "bobr" -o \
"$1" = "switch" -o "$1" = "ttcit" ] ;then
cleancmp $1 $CLEAN
elif [ "$1" = "others" ] ;then
cleanmake s tinproxy  $CLEAN
cleanmake s dimcdistrib $CLEAN
cleanmake s pydim $CLEAN
cleanmake s CNTRRD $CLEAN
cleanmake s ttcmidaemons $CLEAN
cleanmake s filling $CLEAN
cleanmake s dimcoff $CLEAN
cleanmake s monscal++ $CLEAN
cleanmake s fanio/dim $CLEAN
#cleanmake dimsc     # only examples
cleanmake c orbitsync $CLEAN
cleanmake c MORELTUS $CLEAN
# 
cleancmp fanio $CLEAN
cleancmp ttcmi $CLEAN
echo "skipping packages: bobr switch"
#cleancmp bobr $CLEAN
#cleancmp switch $CLEAN
cleancmp ttcit $CLEAN
elif [ "$1" = "inputs" ] ;then
cleancmp inputs $CLEAN
cleanmake c inputs
else
  echo $OTHERSmake | grep " $1 " >/dev/null
  if [ $? -eq 0 ] ;then
    echo "==== NOT SUPPORTED ======= cleanmake $1"
    #cleanmake $1 $CLEAN
  else
    echo $OTHERScmp | grep " $1 " >/dev/null
    if [ $? -eq 0 ] ;then
      #echo "========================== cleancmp $1"
      cleancmp $1 $CLEAN
    else
      echo "========================== not found $1"
    fi
  fi
fi
#
