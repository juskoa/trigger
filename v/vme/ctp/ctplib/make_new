include $(VMEBDIR)/com_defs.make
include $(VMEBDIR)/daq_defs.make
#MYSQLCFLAGS=`mysql_config --cflags`
MYSQLCFLAGS=-I/usr/include/mysql
#CFLAGS= -Wall -g -DCERNLAB_SETUP     or CAVERN_SETUP
ifeq ($(VMESITE), ALICE)
WHICHSETUP = CAVERN_SETUP
else
WHICHSETUP = CERNLAB_SETUP
endif
CFLAGS= $(COMMONCFLAGS) $(daqCCDEFS) -D$(WHICHSETUP) -D$(VMEDRIVER) \
 $(daqINCDIRS) -I$(VMEBLIB)/.. -I$(VMECFDIR)/ctp -I$(VMECFDIR)/ctp_proxy 

include $(VMEBDIR)/sc.make

S_OBJSCOM = fileManip.o readTables.o ctpshm.o
ifdef SERVER_LINK
S_OBJS = $(S_OBJSCOM) actdbctp.o
else
#compiled/linked on client (32bits machine):
# Partition.o ttcmisubs.o: moved to vme/ttcmi
S_OBJS = $(S_OBJSCOM) readBICfile.o readTablesClient.o updateDDL2IR.o timingpars.o \
 calcOverlap.o bcmask.o shared.o Tpartition.o \
 checkCTP.o notInCrate.o readCounters.o initCTP.o swtrigger.o \
 scope.o i2ctemp.o  inputsTools.o busyTools.o dumpCTP.o \
 phase.o pfp.o bobr.o ctpTools.o posixq.o ddr3.o
# intint.o
# mysqlwrap.o
endif
$(info S_OBJS:$(S_OBJS))
all: libctp.a
libctp.a: $(S_OBJS)
	-rm -f libctp.a
	ar rs libctp.a *.o

*.o: ../ctp.h ../ctpcounters.h ctplib.h Tpartition.h
bobr.o: bobr.c ctplib.h
readCounters.o: readCounters.c ctplib.h ../ctp.h ../ctpcounters.h Tpartition.h $(VMEBinc)/bakery.h
readBICfile.o: readBICfile.c $(VMECFDIR)/ctp/ctp.h
swtrigger.o: swtrigger.c ../ctp.h Tpartition.h $(VMEBinc)/bakery.h
#ctpshm.o: ctpshm.c $(VMEBinc)/vmewrapdefs.h $(VMECFDIR)/ctp/ctp.h \
ctpshm.o: ctpshm.c $(VMEBinc)/vmewrapdefs.h $(VMEBinc)/vmeblib.h \
 $(CTPinc)/Tpartition.h
readTables.o: readTables.c $(VMEBinc)/lexan.h $(CTPinc)/Tpartition.h
	$(CC) $(CFLAGS) $(MYSQLCFLAGS) -c -o $@ $<
readTablesClient.o: readTablesClient.c $(VMEBinc)/lexan.h $(CTPinc)/Tpartition.h
	$(CC) $(CFLAGS) $(MYSQLCFLAGS) -c -o $@ $<
updateDDL2IR.o: updateDDL2IR.c $(VMEBinc)/lexan.h $(CTPinc)/Tpartition.h
	$(CC) $(CFLAGS) $(MYSQLCFLAGS) -c -o $@ $<
Tpartition.o: Tpartition.c $(VMEBinc)/lexan.h $(CTPinc)/Tpartition.h
	$(CC) $(CFLAGS) -c -o $@ $<
#Partition.o: Partition.c $(VMEBinc)/lexan.h $(VMECFDIR)/ctp_proxy/Tpartition.h
#	$(CC) $(CFLAGS) -c -o $@ $<
mysqlwrap.o: mysqlwrap.c
	$(CC) $(MYSQLCFLAGS) -c -g -o $@ $<
#ttcmisubs.o: ttcmisubs.c
#	$(CC) $(CFLAGS) -I/opt/dim/dim -c -g -o $@ $<
clean:
	-rm -f *.o

